import telebot

from telebot import types
from telebot import util

from parse import Parser

parser_kuhnya = Parser('https://povar.ru/list/')

bot = telebot.TeleBot('YOUR_ACCESS_TOKEN')
print('Server started')


@bot.message_handler(commands=['start'])
def welcome(message):
    img = open('intro.jpg', 'rb')
    bot.send_sticker(message.chat.id, img)
    img.close()
    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üçõ–ì–æ—Ä—è—á–∏–µ –±–ª—é–¥–∞")
    item2 = types.KeyboardButton("ü•ô–°–∞–ª–∞—Ç—ã")
    item3 = types.KeyboardButton("ü•™–ó–∞–∫—É—Å–∫–∏")
    item4 = types.KeyboardButton("üç≤–°—É–ø—ã")
    item5 = types.KeyboardButton("ü•ê–í—ã–ø–µ—á–∫–∞")
    item6 = types.KeyboardButton("üç®–î–µ—Å–µ—Ä—Ç—ã")
    item7 = types.KeyboardButton("‚òï–ù–∞–ø–∏—Ç–∫–∏")
    item8 = types.KeyboardButton("üçæ–°–æ—É—Å—ã")
    item9 = types.KeyboardButton("ü•´–ó–∞–≥–æ—Ç–æ–≤–∫–∏")
    markup.add(item1, item2, item3, item4, item5, item6, item7, item8, item9)

    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º —Å –≥–æ—Ç–æ–≤–∫–æ–π. –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?".format(
                         message.from_user, bot.get_me()),
                     parse_mode='html',
                     reply_markup=markup)


@bot.message_handler(content_types=['text'])
def chats(message):
    if message.chat.type == 'private':
        if message.text == 'üçõ–ì–æ—Ä—è—á–∏–µ –±–ª—é–¥–∞':
            text = parser_kuhnya.get_available_recipes("–ì–æ—Ä—è—á–∏–µ –±–ª—é–¥–∞")
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ:")
            bot.send_message(message.chat.id, text)
        elif message.text == 'ü•ô–°–∞–ª–∞—Ç—ã':
            text = parser_kuhnya.get_available_recipes("–°–∞–ª–∞—Ç—ã")
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ:")
            bot.send_message(message.chat.id, text)
        elif message.text == 'ü•™–ó–∞–∫—É—Å–∫–∏':
            text = parser_kuhnya.get_available_recipes("–ó–∞–∫—É—Å–∫–∏")
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ:")
            bot.send_message(message.chat.id, text)
        if message.text == 'üç≤–°—É–ø—ã':
            text = parser_kuhnya.get_available_recipes("–°—É–ø—ã")
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ:")
            bot.send_message(message.chat.id, text)
        elif message.text == 'ü•ê–í—ã–ø–µ—á–∫–∞':
            text = parser_kuhnya.get_available_recipes("–í—ã–ø–µ—á–∫–∞")
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ:")
            bot.send_message(message.chat.id, text)
        elif message.text == 'üç®–î–µ—Å–µ—Ä—Ç—ã':
            text = parser_kuhnya.get_available_recipes("–î–µ—Å–µ—Ä—Ç—ã")
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ:")
            bot.send_message(message.chat.id, text)
        elif message.text == '‚òï–ù–∞–ø–∏—Ç–∫–∏':
            text = parser_kuhnya.get_available_recipes("–ù–∞–ø–∏—Ç–∫–∏")
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ:")
            bot.send_message(message.chat.id, text)
        elif message.text == 'üçæ–°–æ—É—Å—ã':
            text = parser_kuhnya.get_available_recipes("–°–æ—É—Å—ã")
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ:")
            bot.send_message(message.chat.id, text)
        elif message.text == 'ü•´–ó–∞–≥–æ—Ç–æ–≤–∫–∏':
            text = parser_kuhnya.get_available_recipes("–ó–∞–≥–æ—Ç–æ–≤–∫–∏")
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ:")
            bot.send_message(message.chat.id, text)

        elif message.text != "/start":
            text = message.text[0].upper() + message.text[1::]
            result = parser_kuhnya.get_recipe_info(text)
            if result is not None:
                bot.send_photo(message.chat.id, result["imgSrc"], caption=result["dishName"])
                # bot.send_message(message.chat.id, result["dishName"])
                bot.send_message(message.chat.id, result["ingredients"])
                if len(result["steps"]) > 0:
                    bot.send_message(message.chat.id, result["steps"])

                with open("anime.jpg", "rb") as animephoto:
                    bot.send_photo(message.chat.id, animephoto,
                                   caption="–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞: {}".format(result["url"]))


# RUN
bot.polling(none_stop=True)
